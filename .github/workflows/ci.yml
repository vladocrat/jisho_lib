name: Build & test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]
        build_type: [Release, Debug]

    runs-on: ${{ matrix.os }}
    
    steps:      
    - name: "Install Qt (Linux)"
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        version: '5.15.2'
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'
        tools: 'tools_cmake tools_opensslv3_src'

    - name: "Set OS-specific values (Linux)"
      if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: |
       echo "GENERATOR=Unix Makefiles" >> $GITHUB_ENV
       echo "CORES=$(nproc --all)" >> $GITHUB_ENV
       
    - name: "Install Qt (Win; 2019)"
      if: ${{ matrix.os == 'windows-2019' }}
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        version: '5.15.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        tools: 'tools_cmake tools_opensslv3_x64'

    - name: "Install OpenSSL (Win; 2019)"
      if: ${{ matrix.os == 'windows-2019'}}
      shell: bash
      run: |
        cd "${{github.workspace}}"
        git clone https://github.com/vladocrat/openssl_3-2-0_windows_x64      
        
        $opensslPath = "${{github.workspace\openssl_3-2-0_windows_x64\bin}}"
        $currentPath = [System.Environment]::GetEnvironmentVariable("PATH", [System.EnvironmentVariableTarget]::Machine)
        [System.Environment]::SetEnvironmentVariable("PATH", "$opensslPath;$currentPath", [System.EnvironmentVariableTarget]::Machine)
    
    - name: "Set OS-specific values (Win; 2019)"
      if: ${{ matrix.os == 'windows-2019' }}
      shell: bash
      run: |
       echo "GENERATOR=Visual Studio 16 2019" >> $GITHUB_ENV
       echo "CORES=$NUMBER_OF_PROCESSORS" >> $GITHUB_ENV

    - uses: actions/checkout@v2
      with:
        path: src

    - name: "Build (Win; 2019)"
      if: ${{ matrix.os == 'windows-2019'}}
      working-directory: ${{github.workspace}}/src
      shell: bash
      run: |
       cmake -DOPENSSL_ROOT_DIR="${{github.workspace\openssl_3-2-0_windows_x64\bin}}" -DCMAKE_BUILD_TYPE="${{matrix.build_type}}" -G "${{env.GENERATOR}}" -S "${{github.workspace}}/src" -B "${{github.workspace}}/build"
       cmake --build "${{github.workspace}}/build" --config "${{matrix.build_type}}" -j "${{env.CORES}}"
       ctest --rerun-failed --output-on-failure --timeout 20 -C "${{matrix.build_type}}" --test-dir "${{github.workspace}}/build/tests"

    - name: "Build"
      if: ${{ matrix.os != 'windows-2019'}}
      working-directory: ${{github.workspace}}/src
      shell: bash
      run: |
       cmake -DCMAKE_BUILD_TYPE="${{matrix.build_type}}" -G "${{env.GENERATOR}}" -S "${{github.workspace}}/src" -B "${{github.workspace}}/build"
       cmake --build "${{github.workspace}}/build" --config "${{matrix.build_type}}" -j "${{env.CORES}}"
       ctest --rerun-failed --output-on-failure --timeout 20 -C "${{matrix.build_type}}" --test-dir "${{github.workspace}}/build/tests"

